document.addEventListener("DOMContentLoaded", function () {
    // –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–æ–≤–æ–π popup-—Ñ–æ—Ä–º—ã
    const popupOverlay = document.querySelector(".popup-order__overlay");
    const popup = document.querySelector(".popup-order");
    const closeButton = document.querySelector(".popup-order__close");
    const body = document.body;
    const phoneInput = document.querySelector("#popup-order-phone");
    const form = document.querySelector("#order-form");
    const successMessage = document.querySelector(".popup-order__success");

    // –û—Ç–∫—Ä—ã—Ç–∏–µ popup
    function openPopup() {
        popupOverlay.classList.add("popup-order__overlay--active");
        popup.classList.add("popup-order--active");
        body.style.overflow = "hidden";
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ popup
    function closePopup() {
        popupOverlay.classList.remove("popup-order__overlay--active");
        popup.classList.remove("popup-order--active");
        body.style.overflow = "";
    }

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º popup –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
    document.body.addEventListener("click", (event) => {
        if (event.target.classList.contains("order-button")) {
            event.preventDefault();
            openPopup();
        }
    });

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º popup –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫ –∏–ª–∏ overlay
    closeButton.addEventListener("click", closePopup);
    popupOverlay.addEventListener("click", closePopup);

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω—É—Ç—Ä–∏ popup
    popup.addEventListener("click", (event) => {
        event.stopPropagation();
    });

    // ==============================
    // üìû –ú–∞—Å–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    // ==============================
    function formatPhoneNumber(input) {
        let value = input.value.replace(/\D/g, "");
        if (value.length > 10) value = value.substring(0, 10);

        let formattedValue = "";
        if (value.length > 0) {
            formattedValue = "(" + value.substring(0, 3);
            if (value.length >= 4) formattedValue += ") " + value.substring(3, 6);
            if (value.length >= 7) formattedValue += "-" + value.substring(6, 8);
            if (value.length >= 9) formattedValue += "-" + value.substring(8, 10);
        }
        input.value = formattedValue;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è intl-tel-input
    if (phoneInput) {
        const iti = window.intlTelInput(phoneInput, {
            initialCountry: "ru",
            preferredCountries: ["ru", "by", "kz"],
            separateDialCode: true,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
            autoPlaceholder: "off"
        });

        phoneInput.placeholder = "(999) 999-99-99";

        phoneInput.addEventListener("countrychange", function() {
            const countryCode = iti.getSelectedCountryData().iso2;
            phoneInput.placeholder = countryCode === "ru" ? "(999) 999-99-99" : "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞";
        });

        phoneInput.addEventListener("keypress", function(e) {
            if (!/\d/.test(e.key)) e.preventDefault();
        });

        phoneInput.addEventListener("input", function() {
            const countryCode = iti.getSelectedCountryData().iso2;
            if (countryCode === "ru") formatPhoneNumber(phoneInput);
        });
    }

    // ==============================
    // üí∞ –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã –≥–∞—Ä–∞–Ω—Ç–∏–∏
    // ==============================
    const amountInput = document.getElementById("guarantee-amount");
    
    if (amountInput) {
        amountInput.addEventListener("input", function(e) {
            // –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –ø—Ä–æ–±–µ–ª—ã
            let value = this.value.replace(/[^\d]/g, "");
            
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –∫–∞–∂–¥—ã–µ 3 —Ü–∏—Ñ—Ä—ã
            if (value.length > 0) {
                value = parseInt(value, 10).toLocaleString("ru-RU");
            }
            
            this.value = value;
        });
    }

    // ==============================
    // üîÑ –õ–æ–≥–∏–∫–∞ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
    // ==============================
    const procedureSelect = document.getElementById("procedure-type");
    const guaranteeSelect = document.getElementById("guarantee-type");
    
    if (procedureSelect && guaranteeSelect) {
        const advanceOption = guaranteeSelect.querySelector('option[value="advance"]');
        
        procedureSelect.addEventListener("change", function() {
            if (this.value === "44-fz") {
                advanceOption.disabled = true;
                advanceOption.selected = false;
                
                if (guaranteeSelect.value === "advance") {
                    guaranteeSelect.value = "";
                }
            } else {
                advanceOption.disabled = false;
            }
        });
    }

    // ==============================
    // üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    // ==============================
    if (form) {
        form.addEventListener("submit", function(e) {
            e.preventDefault();
            
            // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = new FormData(this);
            const data = {};
            
            for (const [key, value] of formData.entries()) {
                data[key] = value;
            }
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            fetch('form-handler.php', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                    showSuccessMessage();
                    
                    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
                    form.reset();
                    
                    // –ó–∞–∫—Ä—ã—Ç–∏–µ popup —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                    setTimeout(() => {
                        closePopup();
                    }, 3000);
                } else {
                    alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " + (result.message || "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"));
                }
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞:', error);
                alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
            });
        });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
    function showSuccessMessage() {
        const successHTML = `
            <div class="popup-order__success">
                <div class="popup-order__success-icon">‚úì</div>
                <p class="popup-order__success-message">
                    –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!<br>
                    –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
                </p>
            </div>
        `;
        
        form.style.display = 'none';
        document.querySelector('.popup-order__content').insertAdjacentHTML('beforeend', successHTML);
    }




   // ==============================
// üöÄ –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –ò–ù–ù —á–µ—Ä–µ–∑ Dadata + datalist
// ==============================
(function() {
    const TOKEN = "2f5c5383769c2db48f7ff0728ef6ab28f0d88e63";
    const innInput = document.getElementById("inn-input");
    const dataList = document.getElementById("inn-suggestions");
    const companyInput = document.querySelector('input[name="company"]');

    if (!innInput || !dataList || !companyInput) return;

    function debounce(fn, ms) {
        let t;
        return (...args) => {
            clearTimeout(t);
            t = setTimeout(() => fn.apply(this, args), ms);
        };
    }

    function fetchSuggestions() {
        const q = innInput.value.replace(/\D/g, "");
        if (q.length < 3) {
            dataList.innerHTML = "";  // –Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ–º, –µ—Å–ª–∏ –º–∞–ª–æ —Ü–∏—Ñ—Ä
            return;
        }

        fetch("https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Accept": "application/json",
                "Authorization": "Token " + TOKEN
            },
            body: JSON.stringify({ query: q, count: 5 })
        })
        .then(r => r.ok ? r.json() : Promise.reject(r.statusText))
        .then(json => {
            dataList.innerHTML = "";  // –æ—á–∏—Å—Ç–∏–ª–∏ –ø—Ä–æ—à–ª—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
            json.suggestions.forEach(item => {
                const opt = document.createElement("option");
                // option.value –±—É–¥–µ—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ innInput –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
                opt.value = item.data.inn;  
                // show name + –ò–ù–ù –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ
                opt.label = `${item.value} ‚Äî –ò–ù–ù ${item.data.inn}`; 
                dataList.appendChild(opt);
            });
        })
        .catch(err => console.warn("Dadata suggest error:", err));
    }

    // –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∏–∑ datalist —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ input + change
    innInput.addEventListener("change", () => {
        // –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ò–ù–ù –∏–∑ —Å–ø–∏—Å–∫–∞, –∑–∞–ø–æ–ª–Ω—è–µ–º company:
        const chosenInn = innInput.value.trim();
        const opt = [...dataList.options].find(o => o.value === chosenInn);
        if (opt) {
            // —Ä–∞–∑–±–∏–≤–∞–µ–º label –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ò–ù–ù
            const [namePart] = opt.label.split(" ‚Äî –ò–ù–ù");
            companyInput.value = namePart;
        }
    });

    innInput.addEventListener("input", debounce(fetchSuggestions, 300));
})();







});