document.addEventListener("DOMContentLoaded", function () {
    // –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–æ–≤–æ–π popup-—Ñ–æ—Ä–º—ã
    const popupOverlay = document.querySelector(".popup-order__overlay");
    const popup = document.querySelector(".popup-order");
    const closeButton = document.querySelector(".popup-order__close");
    const body = document.body;
    const phoneInput = document.querySelector("#popup-order-phone");
    const form = document.querySelector("#order-form");
    const emailInput = form.querySelector('input[name="email"]');

    // –û—Ç–∫—Ä—ã—Ç–∏–µ popup
    function openPopup() {
        popupOverlay.classList.add("popup-order__overlay--active");
        popup.classList.add("popup-order--active");
        body.style.overflow = "hidden";
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ popup
    function closePopup() {
        popupOverlay.classList.remove("popup-order__overlay--active");
        popup.classList.remove("popup-order--active");
        body.style.overflow = "";
        // –£–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å–Ω–æ–≤–∞
        const success = popup.querySelector(".popup-order__success");
        if (success) success.remove();
        form.style.display = "";
    }

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º popup –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
    document.body.addEventListener("click", (event) => {
        if (event.target.classList.contains("order-button")) {
            event.preventDefault();
            openPopup();
        }
    });

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º popup –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫—Ä–µ—Å—Ç–∏–∫ –∏–ª–∏ overlay
    closeButton.addEventListener("click", closePopup);
    popupOverlay.addEventListener("click", closePopup);
    popup.addEventListener("click", (event) => event.stopPropagation());

    // ==============================
    // üìû –ú–∞—Å–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    // ==============================
    if (phoneInput) {
        // –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ (—Ç–æ—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!)
        function formatPhoneNumber(input) {
            let value = input.value.replace(/\D/g, ""); // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
            if (value.length > 10) value = value.substring(0, 10); // –û–±—Ä–µ–∑–∞–µ–º –ª–∏—à–Ω–∏–µ —Ü–∏—Ñ—Ä—ã

            let formattedValue = "";
            if (value.length > 0) {
                formattedValue = "(" + value.substring(0, 3);
                if (value.length >= 4) formattedValue += ") " + value.substring(3, 6);
                if (value.length >= 7) formattedValue += "-" + value.substring(6, 8);
                if (value.length >= 9) formattedValue += "-" + value.substring(8, 10);
            }
            input.value = formattedValue;
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è intl-tel-input
        const iti = window.intlTelInput(phoneInput, {
            initialCountry: "ru",
            preferredCountries: ["ru", "by", "kz"],
            separateDialCode: true,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
            autoPlaceholder: "off"
        });

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞
        phoneInput.placeholder = "(999) 999-99-99";

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Å—Ç—Ä–∞–Ω—ã
        phoneInput.addEventListener("countrychange", function() {
            const countryCode = iti.getSelectedCountryData().iso2;
            phoneInput.placeholder = countryCode === "ru" ? "(999) 999-99-99" : "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞";
        });

        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        phoneInput.addEventListener("keypress", function(e) {
            if (!/\d/.test(e.key)) e.preventDefault();
        });

        // üìå –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–∫—Å: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å –∞–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç–æ–º
        phoneInput.addEventListener("input", function() {
            const countryCode = iti.getSelectedCountryData().iso2;
            if (countryCode === "ru") formatPhoneNumber(phoneInput);
        });

        // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
        form.addEventListener("submit", function(e) {
            const countryCode = iti.getSelectedCountryData().iso2;
            const cleanNumber = phoneInput.value.replace(/\D/g, "");
            const isValid = iti.isValidNumber();

            if (countryCode === "ru") {
                if (cleanNumber.length !== 10 || !isValid) {
                    alert("–î–ª—è –†–æ—Å—Å–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è 10 —Ü–∏—Ñ—Ä –ø–æ—Å–ª–µ +7");
                    e.preventDefault();
                    return;
                }
            } else {
                if (!isValid) {
                    alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã");
                    e.preventDefault();
                    return;
                }
            }
        });
    }

    // ==============================
    // üìß –í–∞–ª–∏–¥–∞—Ü–∏—è Email
    // ==============================
    if (emailInput) {
        // –ú–∞—Å–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ
        emailInput.addEventListener('input', function() {
            let value = this.value.toLowerCase();
            value = value.replace(/@([a-z]+)\.(com|ru|net)$/, (match, domain, zone) => {
                return `@${domain}.${zone}`;
            });
            this.value = value;
        });

        // –ö–∞—Å—Ç–æ–º–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
        emailInput.addEventListener('blur', function() {
            const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            if (!emailPattern.test(this.value)) {
                this.setCustomValidity('–í–≤–µ–¥–∏—Ç–µ email –≤ —Ñ–æ—Ä–º–∞—Ç–µ: name@email.ru');
            } else {
                this.setCustomValidity('');
            }
        });

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ email –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ñ–æ—Ä–º—ã
        form.addEventListener("submit", function(e) {
            const emailValid = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(emailInput.value);
            if (!emailValid) {
                alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –≤ —Ñ–æ—Ä–º–∞—Ç–µ: name@email.ru');
                e.preventDefault();
            }
        });
    }

    // ==============================
    // üí∞ –ê–≤—Ç–æ—Ñ–æ—Ä–º–∞—Ç —Å—É–º–º—ã –≥–∞—Ä–∞–Ω—Ç–∏–∏
    // ==============================
    const amountInput = document.getElementById("guarantee-amount");
    if (amountInput) {
        amountInput.addEventListener("input", function() {
            let value = this.value.replace(/[^\d]/g, "");
            if (value.length > 0) {
                value = parseInt(value, 10).toLocaleString("ru-RU");
            }
            this.value = value;
        });
    }

    // ==============================
    // üîÑ –õ–æ–≥–∏–∫–∞ –≤—ã–ø–∞–¥–∞—é—â–∏—Ö —Å–ø–∏—Å–∫–æ–≤
    // ==============================
    const procedureSelect = document.getElementById("procedure-type");
    const guaranteeSelect = document.getElementById("guarantee-type");
    if (procedureSelect && guaranteeSelect) {
        const advanceOption = guaranteeSelect.querySelector('option[value="advance"]');
        procedureSelect.addEventListener("change", function() {
            if (this.value === "44-fz") {
                advanceOption.disabled = true;
                advanceOption.selected = false;
                if (guaranteeSelect.value === "advance") {
                    guaranteeSelect.value = "";
                }
            } else {
                advanceOption.disabled = false;
            }
        });
    }

    // ==============================
    // üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    // ==============================
    if (form) {
        form.addEventListener("submit", function(e) {
            e.preventDefault();

            // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
            const formData = new FormData(this);
            const data = {};
            for (const [key, value] of formData.entries()) {
                data[key] = value;
            }

            fetch('form-handler.php', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    showSuccessMessage();
                    form.reset();
                    setTimeout(closePopup, 3000);
                } else {
                    alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " + (result.message || "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"));
                }
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞:', error);
                alert("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
            });
        });
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
    function showSuccessMessage() {
        const successHTML = `
            <div class="popup-order__success">
                <div class="popup-order__success-icon">‚úì</div>
                <p class="popup-order__success-message">
                    –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!<br>
                    –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
                </p>
            </div>`;
        form.style.display = 'none';
        document.querySelector('.popup-order__content').insertAdjacentHTML('beforeend', successHTML);
    }
});
